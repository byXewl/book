{"version":3,"file":"542-a8126e.js","mappings":"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","sources":["webpack://TopWritePlugins.lunrjs/../node_modules/lunr-languages/lunr.stemmer.support.js"],"sourcesContent":["/*!\n * Snowball JavaScript Library v0.3\n * http://code.google.com/p/urim/\n * http://snowball.tartarus.org/\n *\n * Copyright 2010, Oleg Mazko\n * http://www.mozilla.org/MPL/\n */\n\n/**\n * export the module via AMD, CommonJS or as a browser global\n * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n */\n;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory)\n    } else if (typeof exports === 'object') {\n        /**\n         * Node. Does not work with strict CommonJS, but\n         * only CommonJS-like environments that support module.exports,\n         * like Node.\n         */\n        module.exports = factory()\n    } else {\n        // Browser globals (root is window)\n        factory()(root.lunr);\n    }\n}(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return function(lunr) {\n        /* provides utilities for the included stemmers */\n        lunr.stemmerSupport = {\n            Among: function(s, substring_i, result, method) {\n                this.toCharArray = function(s) {\n                    var sLength = s.length, charArr = new Array(sLength);\n                    for (var i = 0; i < sLength; i++)\n                        charArr[i] = s.charCodeAt(i);\n                    return charArr;\n                };\n\n                if ((!s && s != \"\") || (!substring_i && (substring_i != 0)) || !result)\n                    throw (\"Bad Among initialisation: s:\" + s + \", substring_i: \"\n                        + substring_i + \", result: \" + result);\n                this.s_size = s.length;\n                this.s = this.toCharArray(s);\n                this.substring_i = substring_i;\n                this.result = result;\n                this.method = method;\n            },\n            SnowballProgram: function() {\n                var current;\n                return {\n                    bra : 0,\n                    ket : 0,\n                    limit : 0,\n                    cursor : 0,\n                    limit_backward : 0,\n                    setCurrent : function(word) {\n                        current = word;\n                        this.cursor = 0;\n                        this.limit = word.length;\n                        this.limit_backward = 0;\n                        this.bra = this.cursor;\n                        this.ket = this.limit;\n                    },\n                    getCurrent : function() {\n                        var result = current;\n                        current = null;\n                        return result;\n                    },\n                    in_grouping : function(s, min, max) {\n                        if (this.cursor < this.limit) {\n                            var ch = current.charCodeAt(this.cursor);\n                            if (ch <= max && ch >= min) {\n                                ch -= min;\n                                if (s[ch >> 3] & (0X1 << (ch & 0X7))) {\n                                    this.cursor++;\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    },\n                    in_grouping_b : function(s, min, max) {\n                        if (this.cursor > this.limit_backward) {\n                            var ch = current.charCodeAt(this.cursor - 1);\n                            if (ch <= max && ch >= min) {\n                                ch -= min;\n                                if (s[ch >> 3] & (0X1 << (ch & 0X7))) {\n                                    this.cursor--;\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    },\n                    out_grouping : function(s, min, max) {\n                        if (this.cursor < this.limit) {\n                            var ch = current.charCodeAt(this.cursor);\n                            if (ch > max || ch < min) {\n                                this.cursor++;\n                                return true;\n                            }\n                            ch -= min;\n                            if (!(s[ch >> 3] & (0X1 << (ch & 0X7)))) {\n                                this.cursor++;\n                                return true;\n                            }\n                        }\n                        return false;\n                    },\n                    out_grouping_b : function(s, min, max) {\n                        if (this.cursor > this.limit_backward) {\n                            var ch = current.charCodeAt(this.cursor - 1);\n                            if (ch > max || ch < min) {\n                                this.cursor--;\n                                return true;\n                            }\n                            ch -= min;\n                            if (!(s[ch >> 3] & (0X1 << (ch & 0X7)))) {\n                                this.cursor--;\n                                return true;\n                            }\n                        }\n                        return false;\n                    },\n                    eq_s : function(s_size, s) {\n                        if (this.limit - this.cursor < s_size)\n                            return false;\n                        for (var i = 0; i < s_size; i++)\n                            if (current.charCodeAt(this.cursor + i) != s.charCodeAt(i))\n                                return false;\n                        this.cursor += s_size;\n                        return true;\n                    },\n                    eq_s_b : function(s_size, s) {\n                        if (this.cursor - this.limit_backward < s_size)\n                            return false;\n                        for (var i = 0; i < s_size; i++)\n                            if (current.charCodeAt(this.cursor - s_size + i) != s\n                                .charCodeAt(i))\n                                return false;\n                        this.cursor -= s_size;\n                        return true;\n                    },\n                    find_among : function(v, v_size) {\n                        var i = 0, j = v_size, c = this.cursor, l = this.limit, common_i = 0, common_j = 0, first_key_inspected = false;\n                        while (true) {\n                            var k = i + ((j - i) >> 1), diff = 0, common = common_i < common_j\n                                ? common_i\n                                : common_j, w = v[k];\n                            for (var i2 = common; i2 < w.s_size; i2++) {\n                                if (c + common == l) {\n                                    diff = -1;\n                                    break;\n                                }\n                                diff = current.charCodeAt(c + common) - w.s[i2];\n                                if (diff)\n                                    break;\n                                common++;\n                            }\n                            if (diff < 0) {\n                                j = k;\n                                common_j = common;\n                            } else {\n                                i = k;\n                                common_i = common;\n                            }\n                            if (j - i <= 1) {\n                                if (i > 0 || j == i || first_key_inspected)\n                                    break;\n                                first_key_inspected = true;\n                            }\n                        }\n                        while (true) {\n                            var w = v[i];\n                            if (common_i >= w.s_size) {\n                                this.cursor = c + w.s_size;\n                                if (!w.method)\n                                    return w.result;\n                                var res = w.method();\n                                this.cursor = c + w.s_size;\n                                if (res)\n                                    return w.result;\n                            }\n                            i = w.substring_i;\n                            if (i < 0)\n                                return 0;\n                        }\n                    },\n                    find_among_b : function(v, v_size) {\n                        var i = 0, j = v_size, c = this.cursor, lb = this.limit_backward, common_i = 0, common_j = 0, first_key_inspected = false;\n                        while (true) {\n                            var k = i + ((j - i) >> 1), diff = 0, common = common_i < common_j\n                                ? common_i\n                                : common_j, w = v[k];\n                            for (var i2 = w.s_size - 1 - common; i2 >= 0; i2--) {\n                                if (c - common == lb) {\n                                    diff = -1;\n                                    break;\n                                }\n                                diff = current.charCodeAt(c - 1 - common) - w.s[i2];\n                                if (diff)\n                                    break;\n                                common++;\n                            }\n                            if (diff < 0) {\n                                j = k;\n                                common_j = common;\n                            } else {\n                                i = k;\n                                common_i = common;\n                            }\n                            if (j - i <= 1) {\n                                if (i > 0 || j == i || first_key_inspected)\n                                    break;\n                                first_key_inspected = true;\n                            }\n                        }\n                        while (true) {\n                            var w = v[i];\n                            if (common_i >= w.s_size) {\n                                this.cursor = c - w.s_size;\n                                if (!w.method)\n                                    return w.result;\n                                var res = w.method();\n                                this.cursor = c - w.s_size;\n                                if (res)\n                                    return w.result;\n                            }\n                            i = w.substring_i;\n                            if (i < 0)\n                                return 0;\n                        }\n                    },\n                    replace_s : function(c_bra, c_ket, s) {\n                        var adjustment = s.length - (c_ket - c_bra), left = current\n                            .substring(0, c_bra), right = current.substring(c_ket);\n                        current = left + s + right;\n                        this.limit += adjustment;\n                        if (this.cursor >= c_ket)\n                            this.cursor += adjustment;\n                        else if (this.cursor > c_bra)\n                            this.cursor = c_bra;\n                        return adjustment;\n                    },\n                    slice_check : function() {\n                        if (this.bra < 0 || this.bra > this.ket || this.ket > this.limit\n                            || this.limit > current.length)\n                            throw (\"faulty slice operation\");\n                    },\n                    slice_from : function(s) {\n                        this.slice_check();\n                        this.replace_s(this.bra, this.ket, s);\n                    },\n                    slice_del : function() {\n                        this.slice_from(\"\");\n                    },\n                    insert : function(c_bra, c_ket, s) {\n                        var adjustment = this.replace_s(c_bra, c_ket, s);\n                        if (c_bra <= this.bra)\n                            this.bra += adjustment;\n                        if (c_bra <= this.ket)\n                            this.ket += adjustment;\n                    },\n                    slice_to : function() {\n                        this.slice_check();\n                        return current.substring(this.bra, this.ket);\n                    },\n                    eq_v_b : function(s) {\n                        return this.eq_s_b(s.length, s);\n                    }\n                };\n            }\n        };\n\n        lunr.trimmerSupport = {\n            generateTrimmer: function(wordCharacters) {\n                var startRegex = new RegExp(\"^[^\" + wordCharacters + \"]+\")\n                var endRegex = new RegExp(\"[^\" + wordCharacters + \"]+$\")\n\n                return function(token) {\n                    // for lunr version 2\n                    if (typeof token.update === \"function\") {\n                        return token.update(function (s) {\n                            return s\n                                .replace(startRegex, '')\n                                .replace(endRegex, '');\n                        })\n                    } else { // for lunr version 1\n                        return token\n                            .replace(startRegex, '')\n                            .replace(endRegex, '');\n                    }\n                };\n            }\n        }\n    }\n}));\n"],"names":["lunr","stemmerSupport","Among","s","substring_i","result","method","this","toCharArray","sLength","length","charArr","Array","i","charCodeAt","s_size","SnowballProgram","current","bra","ket","limit","cursor","limit_backward","setCurrent","word","getCurrent","in_grouping","min","max","ch","in_grouping_b","out_grouping","out_grouping_b","eq_s","eq_s_b","find_among","v","v_size","j","c","l","common_i","common_j","first_key_inspected","k","diff","common","w","i2","res","find_among_b","lb","replace_s","c_bra","c_ket","adjustment","left","substring","right","slice_check","slice_from","slice_del","insert","slice_to","eq_v_b","trimmerSupport","generateTrimmer","wordCharacters","startRegex","RegExp","endRegex","token","update","replace"],"sourceRoot":""}